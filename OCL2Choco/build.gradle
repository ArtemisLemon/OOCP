/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
}

repositories {
    mavenCentral()
    maven {
        url "https://repo1.maven.org/maven2/"
    }
    maven {
        url "https://repo.eclipse.org/content/repositories/atl-releases/"
    }
}

dependencies {
    implementation project(':OCLinChoco')

    implementation "com.beust:jcommander:1.82"
    implementation "com.google.guava:guava:+"    

    //Source ATL(OCL)
    implementation "org.eclipse.emf:org.eclipse.emf.ecore:+"
    implementation "org.eclipse.m2m.atl:org.eclipse.m2m.atl.common:4.8.0"
    implementation "org.eclipse.m2m.atl:org.eclipse.m2m.atl.engine:4.8.0"
    implementation "org.eclipse.m2m.atl:org.eclipse.m2m.atl.dsls:4.8.0"
    implementation "org.eclipse.m2m.atl:org.eclipse.m2m.atl.emftvm.compiler:4.8.0"
    
    // //Source xcore(UML)
    // implementation "org.eclipse.xtext:org.eclipse.xtext:+"
    // implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:+'

    // xtextLanguages('org.eclipse.emf:org.eclipse.emf.ecore.xcore:+') {
    //     exclude group: 'org.antlr', module: 'antlr-runtime'
    // }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.uml2choco.CLI'
}
